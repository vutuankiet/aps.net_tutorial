@model WebSales.Models.EF.Order

@{
    ViewBag.Title = "Create";
}




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

        <div class="card shadow container col-12 col-md-6">
            <div class="card-body">
                <h2>Them moi</h2>
                <h4>Them order</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    <label class="control-label">CustomerID</label>
                    @Html.DropDownList("CustomerID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
                    <div class="invalid-feedback">Example invalid feedback text</div>

                </div>

                <div class="form-group">
                    <label class="control-label">Address</label>
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    <div class="invalid-feedback">Example invalid feedback text</div>

                </div>

                <div class="form-group">
                    <label class="control-label">OrderDate</label>
                    @Html.EditorFor(model => model.OrderDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OrderDate, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label class="control-label">Amount</label>
                    @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label class="control-label">Description</label>
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10 p-0">
                        <input type="submit" value="Create" class="btn btn-outline-success" />
                        @Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class = "btn btn-outline-dark" })
                    </div>
                </div>
            </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
